
export CC=@CC@
export CFLAGS=@CFLAGS@
export LDFLAGS=@LDFLAGS@
export PREFIX=$(shell pwd)

ROOT_DIR=@ROOT_DIR@
DEVELOP_BUILD=@DEVELOP_BUILD@
BUILD_LIBUV=@BUILD_LIBUV@
BUILD_LUAJIT=@BUILD_LUAJIT@
BUILD_ZLIB=@BUILD_ZLIB@
BUILD_OPENSSL=@BUILD_OPENSSL@
BUILD_LIBS=@BUILD_LIBS@

LIBDIR = $(ROOT_DIR)/deps/lib/
BINDIR = $(ROOT_DIR)/deps/bin/
MANDIR = $(ROOT_DIR)/deps/man/
SHAREDIR = $(ROOT_DIR)/deps/share/
INCDIR = $(ROOT_DIR)/deps/include/

OPTS=CC='$(CC)' CFLAGS='$(CFLAGS)' LDFLAGS='$(LDFLAGS)' PREFIX='$(PREFIX)'
CFG_FLAGS=$(OPTS) --prefix='$(PREFIX)' --disable-shared

LIBSLAB = $(LIBDIR)libslab.a
LIBLUAJIT = $(LIBDIR)libluajit-5.1.a
LIBUV = $(LIBDIR)libuv.a
LIBLUV = $(LIBDIR)libluv.a
LIBCRYPTO = $(LIBDIR)libcrypto.a
LIBSSL = $(LIBDIR)libssl.a
LIBZ = $(LIBDIR)libz.a
LUA_COMPAT= $(INCDIR)c-api

LPEG = $(LIBDIR)liblpeg.a
LSSL = $(LIBDIR)liblssl.a
LZLIB = $(LIBDIR)liblzlib.a

ALL = $(BUILD_LIBS) $(LIBSLAB) $(LIBLUV) $(LUA_COMPAT)

LUAJIT_OPTS=CC='$(CC)' CFLAGS='$(CFLAGS) -fomit-frame-pointer' LDFLAGS='$(LDFLAGS) $(CFLAGS)' PREFIX='$(PREFIX)' BUILDMODE='static'

.DEFAULT: all
.PHONY: clean

all: $(MANDIR) $(SHAREDIR) $(BINDIR) $(INCDIR) $(LIBDIR) $(ALL)

$(LIBUV):
	@ echo "  COMPILING	libuv"
	@ cd libuv && ./autogen.sh && ./configure $(CFG_FLAGS) && $(MAKE) && $(MAKE) install

$(LIBLUAJIT):
	@ echo "  COMPILING	luajit"
	@ cd luajit && $(MAKE) $(LUAJIT_OPTS) && $(MAKE) install $(LUAJIT_OPTS)

ifeq ($(BUILD_ZLIB),yes)
OPENSSL_CFG=--openssldir=$(PREFIX) --prefix=$(PREFIX) no-fuzz-libfuzzer no-fuzz-afl no-unit-test no-shared no-hw no-dso no-threads zlib --with-zlib-include=$(INCDIR) --with-zlib-lib=$(LIBDIR)
OPENSSLDEPS=$(LIBZ)
else
OPENSSL_CFG=--openssldir=$(PREFIX) --prefix=$(PREFIX) no-fuzz-libfuzzer no-fuzz-afl no-unit-test no-shared no-hw no-dso no-threads zlib
endif
    
$(LIBCRYPTO): $(LIBSSL)

$(LIBSSL): $(OPENSSLDEPS)
	@ echo "  COMPILING openssl"
	@ cd openssl && \
		./config $(OPENSSL_CFG) && $(MAKE) $(OPTS) && $(MAKE) install $(OPTS)

$(LIBZ):
	@ echo "  COMPILING	zlib"
	@ cd zlib && ./configure --static --prefix=$(PREFIX) && $(MAKE) TEST_LDFLAGS='-L. libz.a $(LDFLAGS)' $(OPTS) && $(MAKE) install $(OPTS)

# to maximize compatiblity, as full libslab requires -std=c11/gnu11
ifeq ($(DEVELOP_BUILD),yes)
$(LIBSLAB):
	@ echo "  COMPILING	libslab"
	@ cd slab && $(MAKE) CC='$(CC)' CFLAGS='$(CFLAGS)'
	@ cp slab/lib/libslab.a $(LIBSLAB)
	@ mkdir -p $(INCDIR)slab && cp slab/src/*.h $(INCDIR)slab
else
$(LIBSLAB):
	@ echo "  COMPILING	libslab"
	$(CC) $(CFLAGS) -c slab/src/buf.c -o slab/src/buf.o && $(AR) rcs $(LIBSLAB) slab/src/buf.o
	@ mkdir -p $(INCDIR)slab && cp slab/src/buf.h $(INCDIR)slab
endif

LIBLUVDEPS = $(LUA_COMPAT)
ifeq ($(BUILD_LUAJIT),yes)
LIBLUVDEPS += $(LIBLUAJIT)
endif
ifeq ($(BUILD_LIBUV),yes)
LIBLUVDEPS += $(LIBUV)
endif
$(LIBLUV): $(LIBLUVDEPS)
	@ echo "  COMPILING	luv"
	@ cp luv.patch luv/luv.patch
	@- cd luv && patch -N -p1 < luv.patch
	$(CC) $(CFLAGS) -c luv/src/luv.c -o luv/src/luv.o && $(AR) rcs $(LIBLUV) luv/src/luv.o
	@ mkdir -p $(INCDIR)luv && cp luv/src/*.h  $(INCDIR)luv

ifeq ($(BUILD_LUAJIT),yes)
LPEGDEPS=$(LIBLUAJIT)
endif
$(LPEG): $(LPEGDEPS)
	@ echo "  COMPILING	lpeg"
	@ cp lpeg.patch lpeg/lpeg.patch
	@- cd lpeg && patch -N -p1 < lpeg.patch
	@ cd lpeg && $(MAKE)
	@ cd lpeg && $(AR) rcs $(LPEG) *.o && ranlib $(LPEG)

LSSLDEPS=
ifeq ($(BUILD_LUAJIT),yes)
LSSLDEPS += $(LIBLUAJIT)
endif
ifeq ($(BUILD_OPENSSL),yes)
LSSLDEPS += $(LIBCRYPTO) $(LIBSSL)
LSSL_TARGET_FLAGS=$(CFLAGS) -DOPENSSL_NO_STDIO -DOPENSSL_NO_SM2 -DPTHREADS
else
LSSL_TARGET_FLAGS=$(CFLAGS)
endif
$(LSSL): $(LSSLDEPS)
	@ echo "  COMPILING	lua-openssl"
	@ cp lssl.patch lua-openssl/lssl.patch
	@- cd lua-openssl && patch -N -p1 < lssl.patch
	@ cd lua-openssl && $(MAKE) libopenssl.a TARGET_FLAGS='$(LSSL_TARGET_FLAGS)'
	@ cp lua-openssl/libopenssl.a $(LSSL)

LIBZDEPS=
ifeq ($(BUILD_LUAJIT),yes)
LIBZDEPS += $(LIBLUAJIT)
endif
ifeq ($(BUILD_ZLIB),yes)
LIBZDEPS += $(LIBZ)
endif
$(LZLIB): $(LIBZDEPS)
	@ echo "  COMPILING	lua-zlib"
	cd lua-zlib && $(CC) $(CFLAGS) -c -o lua_zlib.o lua_zlib.c
	@ cd lua-zlib/ && $(AR) rcs $(LZLIB) *.o && ranlib $(LZLIB)

$(LUA_COMPAT):
	@ echo "  LN lua-compat"
	@ ln -s $(PREFIX)/luv/deps/lua-compat-5.3/c-api $(LUA_COMPAT)

$(ROOT_DIR)/deps/%/:
	@ mkdir -p $@

clean:
	@ rm -rf $(LIBDIR) $(BINDIR) $(INCDIR) $(MANDIR) $(SHAREDIR)
	@ rm -f *.cnf *.cnf.dist
