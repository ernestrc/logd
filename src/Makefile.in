PWD=$(shell pwd)

CC=@CC@
CFLAGS=@CFLAGS@ @EXTRA_CFLAGS@ @DEV_CFLAGS@
LDFLAGS=@LDFLAGS@ @EXTRA_LDFLAGS@
LIBS=@LIBS@
LUAJIT=@LUAJITBIN@

LIBDEPS=$(PWD)/../deps/lib
INCDIR=$(PWD)/../include
BINDIR =$(PWD)/../bin
LIBDIR =$(PWD)/../lib

EXEC_SRC = logd.c
EXEC_OBJ = logd.o
SRCS = $(wildcard *.c)
LUA_SRCS = $(wildcard *.lua)
OBJS = $(filter-out $(patsubst %.c,%.o,$(EXEC_SRC)), $(patsubst %.c,%.o,$(SRCS)))
JITTED = $(patsubst %.lua,%.jit.o,$(LUA_SRCS))
EXEC = $(addprefix $(BINDIR)/,$(patsubst %.c,%,$(EXEC_SRC)))
STATIC_LIBS = $(LIBDEPS)/libslab.a $(LIBDEPS)/liblssl.a $(LIBDEPS)/libluv.a $(LIBDEPS)/liblpcre.a $(LIBDEPS)/liblpeg.a $(LIBDEPS)/liblzlib.a
CMOD = $(LIBDIR)/logd.so
CMOD_DEPS=log.c util.c
PARSER_SO = $(LIBDIR)/logd_parser.so
PARSER_DEPS=log.c util.c
LIBJITTED = $(LIBDIR)/liblogdjit.a
LIB = $(LIBDIR)/liblogd.a

listobj = $(shell [[ -f $(1) ]] && objdump -f $(1) | grep 'file format' | awk -F':' '{print "$(2)/"$$1}' | xargs echo)
untarlib = $(shell cd $(LIBDIR)/objs/$(1) ; cp $(LIBDEPS)/$(1).a . ; ar x $(1).a)
EXTOBJS = $(addprefix $(LIBDIR)/objs/, $(foreach lib,$(STATIC_LIBS),$(call listobj, $(lib), $(patsubst $(LIBDEPS)/%.a,%,$(lib)))))

.PHONY: clean install

default: src

src: prepare $(LIB) $(LIBJITTED) $(EXEC) $(CMOD) $(PARSER_SO)

prepare:
	@ mkdir -p $(INCDIR)/logd
	@ mkdir -p $(addprefix $(LIBDIR)/objs/,$(patsubst $(LIBDEPS)/%.a,%,$(STATIC_LIBS)))
	@ for lib in $(patsubst $(LIBDEPS)/%.a,%,$(STATIC_LIBS)); do cd $(LIBDIR)/objs/$$lib && cp $(LIBDEPS)/$$lib.a . && ar x $$lib.a; done

%.jit.o: %.lua
	@ echo "  JIT	$@"
	@ $(LUAJIT) -b $< `basename $< .lua`.jit.o

%.o: %.c
	$(CC) $(CFLAGS) -c $<

$(LIBJITTED): $(JITTED)
	@ echo "  AR	$@"
	@ $(AR) rcs $(LIBJITTED) $(JITTED)

$(LIB): $(OBJS) $(EXTOBJS)
	@ echo "  AR	$@"
	@ $(AR) rcs $(LIB) $(OBJS) $(EXTOBJS)

$(BINDIR)/%: %.c $(LIBJITTED) $(LIB)
	$(CC) -o $@ $(CFLAGS) $(LDFLAGS) $< -L$(LIBDIR) -Wl,--whole-archive -llogdjit -Wl,--no-whole-archive -llogd $(LIBS)

$(PARSER_SO): parser.h parser.c $(PARSER_DEPS)
	$(CC) -o $(PARSER_SO) $(CFLAGS) -shared -fPIC parser.c $(PARSER_DEPS)

$(CMOD): logd_module.h logd_module.c $(CMOD_DEPS)
	$(CC) -o $(CMOD) $(CFLAGS) -shared -fPIC logd_module.c $(CMOD_DEPS)

$(INCDIR)/logd/%.h: %.h
	@ cd ../include/logd && \
		ln -s $(subst $(INCDIR)/,../../src/,$@) $(subst $(INCDIR)/,,$@)

clean:
	@- rm -rf $(INCDIR)/logd
	@- rm -rf $(LIBDIR)/objs
	@- rm -f $(EXEC)
	@- rm -f $(LIB)
	@- rm -f $(LIBJITTED)
	@- rm -f $(JITTED)
	@- rm -f $(SO)
	@- rm -f $(OBJS)
	@ rm -f *.profraw
